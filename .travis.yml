# Based on the "trust" template v0.1.1
# https://github.com/japaric/trust/tree/v0.1.1

dist: trusty
language: rust
services: docker
sudo: required

# TODO This is the Rust channel that build jobs will use by default but can be
# overridden on a case by case basis down below
rust: stable

env:
  global:
    # TODO Update this to match the name of your project.
    - CRATE_NAME=minrs

    # default job
    - TARGET=x86_64-unknown-linux-gnu

matrix:
  # TODO These are all the build jobs. Adjust as necessary. Comment out what you
  # don't need
  include:
    # Linux
    - env: TARGET=i686-unknown-linux-gnu
    - env: TARGET=i686-unknown-linux-musl
    # - env: TARGET=x86_64-unknown-linux-gnu  # this is the default job
    - env: TARGET=x86_64-unknown-linux-musl

    # OSX
    - env: TARGET=i686-apple-darwin
      os: osx
    - env: TARGET=x86_64-apple-darwin
      os: osx

    # *BSD
    - env: TARGET=i686-unknown-freebsd DISABLE_TESTS=1
    - env: TARGET=x86_64-unknown-freebsd DISABLE_TESTS=1
    - env: TARGET=x86_64-unknown-netbsd DISABLE_TESTS=1

    # Other architectures
    - env: TARGET=aarch64-unknown-linux-gnu
    - env: TARGET=armv7-unknown-linux-gnueabihf
    - env: TARGET=mips-unknown-linux-gnu
    - env: TARGET=mips64-unknown-linux-gnuabi64
    - env: TARGET=mips64el-unknown-linux-gnuabi64
    - env: TARGET=mipsel-unknown-linux-gnu
    - env: TARGET=powerpc-unknown-linux-gnu
    - env: TARGET=powerpc64-unknown-linux-gnu
    - env: TARGET=powerpc64le-unknown-linux-gnu
    - env: TARGET=s390x-unknown-linux-gnu DISABLE_TESTS=1

    # Testing other channels
    - env: TARGET=x86_64-unknown-linux-gnu
      rust: nightly
    - env: TARGET=x86_64-apple-darwin
      os: osx
      rust: nightly
    - env: TARGET=i686-apple-darwin
      os: osx
      rust: nightly

  allow_failures:
    - env: TARGET=x86_64-unknown-netbsd DISABLE_TESTS=1
    - env: TARGET=i686-apple-darwin

install:
  - set -e
  - sh ci/install.sh
  - source ~/.cargo/env || true

script:
  - set -e
  - bash ci/script.sh

after_script: set +e

before_deploy:
  - set -e
  - sh ci/before_deploy.sh

deploy:
  # TODO update `api_key.secure`
  # - Create a `public_repo` GitHub token. Go to: https://github.com/settings/tokens/new
  # - Encrypt it: `travis encrypt GH_TOKEN=0123456789012345678901234567890123456789`
  # - Paste the output down here
  api_key:
    secure: "l/ux5HNXHdoFGZIL+rKeVZnUOGTjQqxjck/AyvgEWymq9AKhIVcSLHcQHIXbV2hKfgc1+RVQLzhvB2txNR37/NJIsZHhtWd6TnDrLupeQVB72BlJUbzd1hNZuKh0GkYLXHZRb5DKHFHfuaggGlKygvBTQerFvxJLOm2jtVCqMcRfhQAEtwUlCYlVQ2qmtkBn/smhySBMI0ZxuF+49f+ue4g+Q6HNM7+buYuNir/lcDan7Fx+Svdivn4B6kfQygIrivMz3jUaR6RWkp672HSNkOfUaiavv2oqhqh/3MTlK2kYk4WqZnk4+C35UP8NXcQwmcSBLfek1jzwfqZz5JwJYtdnn4uZ6G4/0b0cs1yAdTwzqWIlaiwecHgTiFjjklsL/eW/gaW26ylq90FGClShBzB6IiblkEBIlcmUij9aguqNLqEOgkWWmIrMV0vVxFqKCyvOt3DuEQgnsa+l9afdRvUE4m16a1cplJYrYpIAKt3Csi/4NvaXc7/vMgEgq8zaZanmwBFV61TQMS1gIy1M9S0IQfPecawqO8cc2dLOYK6nMWQL+ogbOcHKYiNQjKmWGUrHH1mtuTN7SyIxBS+y2Z/qG/VFMwAMTXEQA6dD6aRIzCLdBp4nPNoKN3bTYX7/P4W4aPHvxAO0BbZCL0AGQDhVKJNaAJFom3G7ljqo4ko="
  file_glob: true
  file: $CRATE_NAME-$TRAVIS_TAG-$TARGET.*
  on:
    # TODO Here you can pick which targets will generate binary releases
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    condition: $TRAVIS_RUST_VERSION = stable
    tags: true
  provider: releases
  skip_cleanup: true

cache: cargo
before_cache:
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo

branches:
  only:
    # release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master

notifications:
  email:
    on_success: never
